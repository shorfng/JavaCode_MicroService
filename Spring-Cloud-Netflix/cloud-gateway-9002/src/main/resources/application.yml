server:
  port: 9002

Spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      # 路由可以有多个
      routes:
        # 自定义的路由 ID，保持唯一
        - id: service-autodeliver-router
          # 目标服务地址
          # uri: http://127.0.0.1:8096
          # 动态路由：uri 配置为服务名称（gateway 网关从服务注册中心获取实例信息，负载后路由）
          uri: lb://resume-service-autodeliver
          # 断言：路由条件，接受一个输入参数，返回一个布尔值结果。
          # 该接口包含多种默认方法来将 Predicate 组合成其他复杂的逻辑（比如：与，或，非）。
          predicates:
            - Path=/autodeliver/**
        # 自定义的路由 ID，保持唯一
        - id: service-resume-router
          uri: lb://resume-service-resume
          predicates:
            - Path=/resume/**
          # 过滤器（GateWayFilter：会对单个路由生效）
          # filters:
            # 作用：去掉 url 中的占位后转发路由（这里1表示去掉第一个占位字符串）
            #- StripPrefix=1
  zipkin:
    # zipkin server 的请求地址
    base-url: http://127.0.0.1:9411
    sender:
      # web：客户端将踪迹日志数据通过网络请求的方式传送到服务端
      # kafka/rabbit：客户端将踪迹日志数据传递到 mq 进行中转
      type: web
  sleuth:
    sampler:
      # 采样率（1 代表 100% 全部采集）（默认0.1 代表 10% 的请求踪迹数据会被采集）
      # 生产环境下，请求量非常大，没有必要所有请求的踪迹数据都采集分析，对于网络包括server端压力都是比较大的，可以配置采样率采集一定比例的请求的踪迹数据进行分析即可
      probability: 1

# 将服务提供者注册到 Eureka 服务中心
eureka:
  client:
    service-url:
      # 注册到单实例（非集群模式），就写一个就可以
      # 注册到集群，把多个 Eureka server 地址使用逗号连接起来即可
      defaultZone: http://CloudEurekaServerA:8761/eureka,http://CloudEurekaServerB:8762/eureka
  instance:
    # 服务实例中显示 ip，而不是显示主机名（为了兼容老的 eureka 版本）
    prefer-ip-address: true
    # 自定义实例显示格式（加上版本号，便于多版本管理）
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}:@project.version@

# 分布式链路追踪 Sleuth
logging:
  level:
    org.springframework.web.servlet.DispatcherServlet: debug
    org.springframework.cloud.sleuth: debug
